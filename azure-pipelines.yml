# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

# welcome to yaml pipeline

trigger:
- dev
- master

pr:
- master
- dev

stages:
- stage: "Build"
  jobs:
  - job: "BuildJob"
    pool:
      vmimage: "ubuntu-latest"

    variables:
        buildConfiguration: "Release"

    steps:
    # - task: DotNetCoreCLI@2
    #   inputs:
    #     command: 'restore'
    #     projects: '**/*.csproj'
    #     feedsToUse: 'select'

    # - task: DotNetCoreCLI@2
    #   inputs:
    #     command: 'build'
    #     projects: '**/*.csproj'
    #     arguments: '--configuration $(buildConfiguration)'
    # - task: DotNetCoreCLI@2
    #   inputs:
    #     command: 'publish'
    #     publishWebProjects: true
    #     arguments: '--configuration $(buildConfiguration) --output $(build.ArtifactStagingDirectory)'
    # - template: Template/buildandrestore.yaml
    #   parameters:
    #     buildConfiguration: 'Debug'

      - template: Template/buildandrestore.yaml
        parameters: 
          buildConfiguration: 'Release'

    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #     ArtifactName: 'drop'
    #     publishLocation: 'Container'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(build.ArtifactStagingDirectory)'
        artifact: 'drop.$(buildConfiguration)'
        publishLocation: 'pipeline'

- stage: "DeploytoDev"
  dependsOn: "Build"
  jobs:
  - job:
    pool:
      vmimage: "ubuntu-latest"
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop.Release'
        targetPath: '$(Pipeline.Workspace)'
        
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure-devops-demo'
        appType: 'webApp'
        WebAppName: 'dev-web-app-1-1'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

- stage: "DeploytoStage"
  dependsOn: "DeploytoDev"
  jobs:
  - job:
    pool:
      vmimage: "ubuntu-latest"
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop.Release'
        targetPath: '$(Pipeline.Workspace)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure-devops-demo'
        appType: 'webApp'
        WebAppName: 'web-app-stage'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

- stage: "DeploytoProd"
  dependsOn: "DeploytoStage"
  jobs:
  - job:
    pool:
      vmimage: "ubuntu-latest"
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'drop.Release'
        targetPath: '$(Pipeline.Workspace)'

    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Azure-devops-demo'
        appType: 'webApp'
        WebAppName: 'web-app-prod'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'

    - task: AzureAppServiceManage@0
      inputs:
        azureSubscription: 'Azure-devops-demo'
        Action: 'Swap Slots'
        WebAppName: 'web-app-prod'
        ResourceGroupName: 'devops-demo-rg'
        SourceSlot: 'web-app-stage'