# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

# welcome to yaml pipeline

trigger:
- dev
- master
- feature

pr:
- master
- dev

stages:
- stage: "Build"
  jobs:
  - job: "BuildJob"
    pool:
      vmimage: "windows-latest"

    variables:
        buildConfiguration: "Release"

    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
        feedsToUse: 'select'
    

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '$(Parameters.TestProjects)'
        arguments: '--configuration $(BuildConfiguration)'
        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(buildConfiguration) --output $(build.ArtifactStagingDirectory)'

    # - template: Template/buildandrestore.yaml
    #   parameters:
    #     buildConfiguration: 'Debug'

    #   - template: Template/buildandrestore.yaml
    #     parameters: 
    #       buildConfiguration: 'Release'

    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #     ArtifactName: 'drop'
    #     publishLocation: 'Container'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(build.ArtifactStagingDirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'

- stage: "DeploytoFeature"
  dependsOn: "Build"
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/feature')
  jobs:
  - deployment:
    pool:
      vmimage: "windows-latest"
    environment: 'Feature'
    strategy:
      runOnce:
        deploy:
          steps:
          # - task: DownloadPipelineArtifact@2
          #   inputs:
          #     buildType: 'current'
          #     artifactName: 'drop.Release'
          #     targetPath: '$(Pipeline.Workspace)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure-devops-demo'
              appType: 'webApp'
              WebAppName: 'web-app-stage'
              packageForLinux: '$(Pipeline.Workspace)/**/*.zip'
          - task: ShaykiAbramczyk.CreatePullRequest.CreatePullRequest.CreatePullRequest@1
            displayName: 'Create Pull Request'
            inputs:
              repoType: GitHub
              githubEndpoint: 'GitHub connection 2'
              githubRepository: 'LBCIT-Terraform-scripts/HelloWorld-dotnet-project--yaml'
              targetBranch: dev
              title: 'Merge $(Build.SourceBranch) to dev'
              reviewers: 'ayomide@lbcit.ca'

- stage: "DeploytoDev"
  dependsOn: "Build"
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/dev')
  jobs:
  - deployment:
    pool:
      vmimage: "windows-latest"
    environment: 'Development'
    strategy:
      runOnce:
        deploy:
          steps:

          ################
          # NOT NEEDED IN ENVIRONMENT DEPLOYMENT
          ###############
          # - task: DownloadPipelineArtifact@2
          #   inputs:
          #     buildType: 'current'
          #     targetPath: '$(Pipeline.Workspace)'
              
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure-devops-demo'
              appType: 'webApp'
              WebAppName: 'dev-web-app-1-1'
              packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

          - task: ShaykiAbramczyk.CreatePullRequest.CreatePullRequest.CreatePullRequest@1
            displayName: 'Create Pull Request'
            inputs:
              repoType: GitHub
              githubEndpoint: 'GitHub connection 2'
              githubRepository: 'LBCIT-Terraform-scripts/HelloWorld-dotnet-project--yaml'
              targetBranch: master
              title: 'Merge $(Build.SourceBranch) to Master'
              reviewers: 'ayomide@lbcit.ca'



- stage: "DeploytoProd"
  dependsOn: "Build"
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/prod')
  jobs:
  - deployment:
    pool:
      vmimage: "ubuntu-latest"
    environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          # - task: DownloadPipelineArtifact@2
          #   inputs:
          #     buildType: 'current'
          #     artifactName: 'drop.Release'
          #     targetPath: '$(Pipeline.Workspace)'

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Azure-devops-demo'
              appType: 'webApp'
              WebAppName: 'web-app-prod'
              packageForLinux: '$(Pipeline.Workspace)/**/*.zip'

          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: 'Azure-devops-demo'
              Action: 'Swap Slots'
              WebAppName: 'web-app-prod'
              ResourceGroupName: 'devops-demo-rg'
              SourceSlot: 'web-app-stage'